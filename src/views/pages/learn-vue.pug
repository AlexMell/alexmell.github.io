extends ../layout

block append scripts
    script(src='../../../src/plugins/vue.js')
    script(src='../../../dist/scripts/learn-vue/learn-vue.min.js')

block content
    div(class="row row--vue")
        div(id="app")
            label(for="change_title") Изменить текст
            input(type="text", id="change_title", style="display: block; width: 100%; margin: 0 0 5px;" v-on:input="changeTitle")
            span {{ message }}
            span {{ sayHello() }}
            div(v-html="someBlock")

    div(class="row row--vue")
        div(id="exercise-1")
            input(type="text" v-model="message")
            span {{ message }}
            button(@click="show = !show") Нажми чтобы скрыть квадрат ниже
            div(class="squire" style="width: 200px; height: 200px; background: #000;" v-if="show")

    div(class="row row--vue")
        div(id="app-2")
            span(class="", v-bind:title="message") Подержи курсор надо мной пару секунд, чтобы увидеть динамически связанное значение title!
    div(class="row row--vue")
        div(id="app-3")
            span(v-if="seen") Пропадаем

    div(class="row row--vue")
        div(id="app-4")
            ul
                li(v-for="todo in todos") {{ todo.text }}

    div(class="row row--vue")
        div(id="app-5")
            p {{ message }}
            a(v-bind:href="link" target="_blank") Link to alexmell github
            button(v-on:click="reverseMessage") Обратить порядок букв в сообещении

    div(class="row row--vue")
        div(id="app-6")
            p {{ message }}
            input(type="text" v-model="message")

    div(class="row row--vue")
        div(id="exercise")
            // 1) Fill the <p> below with your Name and Age - using Interpolation
            p VueJS is pretty cool - {{ name }} ({{ age }})
            // 2) Output your age, multiplied by 3
            p Multiply age: {{ multiplyAge() }}
            // 3) Call a function to output a random float between 0 and 1 (Math.random())
            p Random: {{ randomAge() }}
            // 4) Search any image on Google and output it here by binding the "src" attribute
            br
            div
                img(v-bind:src="imgLink" style="width:100px; height:100px")
            // 5) Pre-Populate this input with your name (set the "value" attribute)
            div
                input(type="text" v-bind:value="name")

    div(class="row row--vue")
        div(id="app-7")
            button(type="submit" v-on:click="increase(2)") Click for add to counter + 2
            button(type="submit" v-on:click="counter++") Click for add to counter
            button(type="submit" v-on:click="counter--") Click for less to counter
            span {{ counter * 2 ? 'Its more than 10' : 'Its less then 10' }}
            span {{ counter }}
            span(v-on:mousemove="updateCoordinates" style="display: block; margin: 10px 0;") Coordinates: {{ x }} {{ y }}
                span(v-on:mousemove.stop) stop event is here
            input(type="text" v-on:keyup.enter.space="alertMe")

    div(class="row row--vue")
        div(id="exercise-2")
            // 1) Show an alert when the Button gets clicked
            div
                button(v-on:click="showAlert" type="submit") Show alert
            br
            // 2) Listen to the "keydown" event and store the value in a data property (hint: event.target.value gives you the value)
            div
                input(type="text" v-on:keydown="storeValue")
                p {{ value }}
            // 3) Adjust the example from 2) to only fire if the "key down" is the ENTER key
            div
                input(type="text" v-on:keydown.enter="storeValue")
                p {{ value }}

    div(class="row row--vue")
        div(id="exercise-3")
            // 1) Show a "result" of 'not there yet' as long as "value" is not equal to 37 - you can change "value" with the buttons. Print 'done' once you did it
            div
                p Current Value: {{ value }}
                button(@click="value += 5") Add 5
                button(@click="value += 5") Add 1
                p {{ result() }} || {{ output }}
            // 2) Watch for changes in the "result" and reset the "value" after 5 seconds (hint: setTimeout(..., 5000)
            div
                input(type="text")
                p {{ value }}

    div(class="row row--vue")
        div(id="app-8")
            div(class="demo-square" v-bind:click="attachRed = !attachRed" v-bind:class="{red: attachRed, blue: !attachRed}")
            div(class="demo-square" v-bind:class="{red: attachRed}")
            div(class="demo-square" v-bind:class="[color, {red: attachRed}]")

    div(class="row row--vue")
        div(id="app-9")
            div(class="demo-square" v-bind:style="{backgroundColor: color}")
            div(class="demo-square" v-bind:style="myStyle")
            div(class="demo-square" v-bind:style="[myStyle, {height: width + 'px'}]")
            input(type="text" v-model="color")
            input(type="text" v-model="width")

    div(class="row row--vue")
        h3 Filtres
        div(id="exercise-4")
            ul
                li(v-for="item in filteredUsers") {{ item.name }}, {{ item.age }} 
